name: PHPUnit for MQTT

on:
  push:
  pull_request:
  schedule:
    - cron: '11 2 * * *'

jobs:
  ci:
    name: Test on PHP${{ matrix.php-version }} Swoole-${{ matrix.swoole-version }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest]
        php-version: ['7.2', '7.3', '7.4', '8.0']
        swoole-version: ['v4.4.26', 'v4.5.11', 'v4.6.7', 'v4.7.1', 'v4.8.0', 'master']
      max-parallel: 5
      fail-fast: false
    env:
      SWOOLE_VERSION: ${{ matrix.swoole-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          ini-values: extension=swoole
          coverage: none

      - name: Build Swoole
        if: matrix.swoole-version != 'v4.4.26' && matrix.php-version != '8.0'
        run: |
          wget https://github.com/swoole/swoole-src/archive/${SWOOLE_VERSION}.tar.gz -O swoole.tar.gz
          mkdir -p swoole
          tar -xf swoole.tar.gz -C swoole --strip-components=1
          rm swoole.tar.gz
          cd swoole
          phpize
          ./configure --enable-openssl --enable-mysqlnd --enable-http2
          make -j$(nproc)
          sudo make install
          php --ri swoole

      - name: Setup Deps
        env:
          COMPOSER_ROOT_VERSION: 1.4-dev
        run:
          composer install -o

      - name: Coding Standards Check
        run: |
          composer cs-check

      - name: Run Test Cases
        if: matrix.swoole-version != 'v4.4.26' && matrix.php-version != '8.0'
        run: |
          composer test
